#pragma once

//Реализовать класс Counter, описывающий цифровой счетчик.Одним из полей этого класса
//будет переменная с ограниченным диапазоном, значение которой сбрасывается, если её 
//целочисленное значение достигает определённого максимума(например, переменная current 
//может принимать значения в диапазоне от 0 до 99999).В качестве реального примера 
//такого счётчика представьте счётчик километража в автомобиле, или же домашний 
//счётчик по учёту расхода воды или электроэнергии.Обязательные поля : 
//текущее значение счётчика, максимальное значение диапазона, минимальное значение 
//диапазона, шаг прироста.Обязательные методы : конструктор по умолчанию, 
//несколько видов конструкторов с параметрами, увеличение текущего значения счётчика 
//на 1, увеличение значения на заданную величину(шаг прироста), сброс(обнуление) счётчика, 
//установка минимального и максимального значений.

class Counter
{
public:
	Counter();
	Counter(int max);
	Counter(int max, int current);
	Counter(int max, int current, int step);

	//Методы счетчика
	void increaseByOneStep();
	int getCurrentValue();
	void resetCounter();

	//Сеттеры
	void setStep(int value);
	void setMin(int value);
	void setMax(int value);


private:
	int _current;
	int _max;
	int _min;
	int _step;

	void checkForMaxValue();
};

